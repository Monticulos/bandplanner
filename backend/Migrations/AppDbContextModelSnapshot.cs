// <auto-generated />
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.DailyScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<string[]>("Description")
                        .HasColumnType("text[]");

                    b.Property<double>("Score")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("DailyScores");
                });

            modelBuilder.Entity("Backend.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ScoresId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ScoresId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("Backend.Models.WeeklyScores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FridayId")
                        .HasColumnType("integer");

                    b.Property<int>("MondayId")
                        .HasColumnType("integer");

                    b.Property<int>("SaturdayId")
                        .HasColumnType("integer");

                    b.Property<int>("SundayId")
                        .HasColumnType("integer");

                    b.Property<int>("ThursdayId")
                        .HasColumnType("integer");

                    b.Property<int>("TuesdayId")
                        .HasColumnType("integer");

                    b.Property<int>("WednesdayId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FridayId");

                    b.HasIndex("MondayId");

                    b.HasIndex("SaturdayId");

                    b.HasIndex("SundayId");

                    b.HasIndex("ThursdayId");

                    b.HasIndex("TuesdayId");

                    b.HasIndex("WednesdayId");

                    b.ToTable("WeeklyScores");
                });

            modelBuilder.Entity("Backend.Models.Participant", b =>
                {
                    b.HasOne("Backend.Models.WeeklyScores", "Scores")
                        .WithMany()
                        .HasForeignKey("ScoresId");

                    b.Navigation("Scores");
                });

            modelBuilder.Entity("Backend.Models.WeeklyScores", b =>
                {
                    b.HasOne("Backend.Models.DailyScore", "Friday")
                        .WithMany()
                        .HasForeignKey("FridayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.DailyScore", "Monday")
                        .WithMany()
                        .HasForeignKey("MondayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.DailyScore", "Saturday")
                        .WithMany()
                        .HasForeignKey("SaturdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.DailyScore", "Sunday")
                        .WithMany()
                        .HasForeignKey("SundayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.DailyScore", "Thursday")
                        .WithMany()
                        .HasForeignKey("ThursdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.DailyScore", "Tuesday")
                        .WithMany()
                        .HasForeignKey("TuesdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.DailyScore", "Wednesday")
                        .WithMany()
                        .HasForeignKey("WednesdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Friday");

                    b.Navigation("Monday");

                    b.Navigation("Saturday");

                    b.Navigation("Sunday");

                    b.Navigation("Thursday");

                    b.Navigation("Tuesday");

                    b.Navigation("Wednesday");
                });
#pragma warning restore 612, 618
        }
    }
}
